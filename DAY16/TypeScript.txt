class Car {
    car:string;
    color:string;
    constructor(x:string,y:string){
this.car = x;
this.color = y;
    }
    printCar(){
        console.log(this.car + ' '+this.color)
    }
}
let c = new Car("volvo","blue");
c.printCar();


******************************************

interface Car1{
    car:string,color:string
}
export class Car {
    public car:string;
    public color:string;
    constructor(private c:Car1){
this.car = c.car;
this.color = c.color;
    }
    printCar(){
        console.log(this.car + ' '+this.color)
    }
}
let c = new Car({car:"volvo",color:"blue"});
c.printCar();

*****************************************

//spread operator
let a = [1,2,3,4];
let b = [5,6,7,8];
let c = a.concat(b);
let d = [...a,...b];

********************************************

//arrow function
function a(x:string,y:string){
console.log(x);
}
const a1 = (x:string,y:string)=>console.log(x);

********************************************

class Library {
    Title: string;
    Author: string;

    constructor(title: string, author: string) {
        this.Title = title;
        this.Author = author;
    }

    printBook() {
        console.log(this.Title + " " + this.Author);
    }
}

let b = new Library("XYZ", "ABC");
b.printBook();


**************************************

class Interest {
    principal: number;
    time: number;
    rate: number;

    constructor(p: number, t: number, r: number) {
        this.principal = p;
        this.time = t;
        this.rate = r;
    }

    printInterest() {
        const si = (this.principal * this.time * this.rate) / 100;
        console.log("Simple Interest:", si);
    }
}

let i = new Interest(7946, 2, 15);
i.printInterest();

****************************************

<html>
<head>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossorigin="anonymous">
<script>
  var myhobbies = [
    {id:1,name:"chess",fav:true},
    {id:2,name:"reading",fav:false},
    {id:3,name:"walking",fav:false},
  ];

function listHobbies() {
  var hobbyList = document.getElementById("home-tab-pane");
  hobbyList.innerHTML = "<ul>";
  myhobbies.forEach(function(hobby) {
    hobbyList.innerHTML += "<li>" + hobby.name + (hobby.fav ? "<button onclick='removeFav("+hobby.id+")'>Remove fav</button>" : "<button onclick='addFav("+hobby.id+")'>Add to fav</button>") + "<button onclick='delHobby("+hobby.id+")'>X</button></li>";
  });
  hobbyList.innerHTML += "</ul>";
}

function addHobby() {
  var newHobbyInput = document.getElementById("newHobby");
  var newHobbyName = newHobbyInput.value.trim();
  if (newHobbyName) {
    myhobbies.push({name: newHobbyName, fav: false});
    newHobbyInput.value = ""; // Clear input field
    listHobbies(); // Refresh the hobby list
  } else {
    alert("Please enter a valid hobby name.");
  }
}

function delHobby(id) {
  myhobbies = myhobbies.filter(function(hobby) {
    return hobby.id !== id;
  });
  listHobbies(); // Refresh the hobby list
}

function addFav(id) {
  myhobbies.forEach(function(hobby) {
    if (hobby.id === id) {
      hobby.fav = true; // Set the hobby as favourite
    }
  });
  listHobbies(); // Refresh the hobby list
}

function removeFav(id) {
  myhobbies.forEach(function(hobby) {
    if (hobby.id === id) {
      hobby.fav = false; // Remove the hobby from favourites
    }
  });
  listHobbies(); // Refresh the hobby list
}
function listFavourites() {
  console.log("Listing favourites");
  var favList = document.getElementById("contact-tab-pane");
  favList.innerHTML = "<ul>";
  myhobbies.forEach(function(hobby) {
    if (hobby.fav) {
      favList.innerHTML += "<li>" + hobby.name + "</li>";
    }
  });
  favList.innerHTML += "</ul>";
}
</script>

</head>
<body onload="listHobbies()">
My hobbies<br/>

<ul class="nav nav-tabs" id="myTab" role="tablist">
  <li class="nav-item" role="presentation">
    <button class="nav-link active" id="home-tab" data-bs-toggle="tab" data-bs-target="#home-tab-pane" type="button" role="tab" aria-controls="home-tab-pane" aria-selected="true">My hobbies</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="profile-tab" data-bs-toggle="tab" data-bs-target="#profile-tab-pane" type="button" role="tab" aria-controls="profile-tab-pane" aria-selected="false">Add new hobby</button>
  </li>
  <li class="nav-item" role="presentation">
    <button class="nav-link" id="contact-tab" data-bs-toggle="tab" data-bs-target="#contact-tab-pane" type="button" role="tab" aria-controls="contact-tab-pane" aria-selected="false" onclick="listFavourites()">My favourite</button>
  </li>
 
</ul>


<div class="tab-content" id="myTabContent">
  <div class="tab-pane fade show active" id="home-tab-pane" role="tabpanel" aria-labelledby="home-tab" tabindex="0">Hobby list</div>
  <div class="tab-pane fade" id="profile-tab-pane" role="tabpanel" aria-labelledby="profile-tab" tabindex="0">New hobby

<input type="text" id="newHobby" placeholder="Enter new hobby">
<button onclick="addHobby()">Add Hobby</button>


  </div>
  <div class="tab-pane fade" id="contact-tab-pane" role="tabpanel" aria-labelledby="contact-tab" tabindex="0">Favourite</div>
 
</div>







</body>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js" integrity="sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q" crossorigin="anonymous"></script>
</html>


